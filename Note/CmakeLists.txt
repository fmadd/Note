cmake_minimum_required(VERSION 3.6)
project(Project_ImGui)

set(CMAKE_CXX_STANDARD 23)


include(FetchContent)

find_package(OpenGL)
FetchContent_Declare(
        glad
        GIT_REPOSITORY https://github.com/Dav1dde/glad.git
        GIT_TAG df8e9e16110b305479a875399cee13daa0ccadd9
)
FetchContent_MakeAvailable(glad)

set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_INSTALL OFF CACHE BOOL "" FORCE)

FetchContent_Declare(
        glfw
        GIT_REPOSITORY https://github.com/glfw/glfw.git
        GIT_TAG 3.3.2
)
FetchContent_MakeAvailable(glfw)

FetchContent_Declare(
        imgui
        GIT_REPOSITORY https://github.com/ocornut/imgui.git
        GIT_TAG v1.90.4
)

FetchContent_GetProperties(imgui)

if(NOT imgui_POPULATED)
    FetchContent_Populate(imgui)
    file(GLOB IMGUI_SOURCES ${imgui_SOURCE_DIR}/*.cpp)
    file(GLOB IMGUI_HEADERS ${imgui_SOURCE_DIR}/*.h)
    if(NOT TARGET imgui)
        add_library(imgui STATIC ${IMGUI_SOURCES} ${IMGUI_HEADERS})
        target_include_directories(imgui PUBLIC ${imgui_SOURCE_DIR})
    endif()
endif()

target_include_directories(imgui INTERFACE ${imgui_SOURCE_DIR} ${imgui_SOURCE_DIR}/backends)
target_sources(imgui INTERFACE
        ${imgui_SOURCE_DIR}/backends/imgui_impl_glfw.cpp
        ${imgui_SOURCE_DIR}/backends/imgui_impl_opengl3.cpp
)

add_executable(${PROJECT_NAME} src/main.cpp src/crpt.cpp src/utils.hpp)
find_package(Boost REQUIRED)

IF (Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
    target_link_libraries (${PROJECT_NAME} ${BOOST_LIBRARIES})
    ADD_DEFINITIONS( "-DHAS_BOOST" )
ENDIF()
add_subdirectory(libs/cryptopp-cmake/cryptopp-cmake)

target_link_libraries(${PROJECT_NAME} PRIVATE cryptopp imgui glfw OpenGL::GL)
